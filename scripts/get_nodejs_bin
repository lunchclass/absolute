#!/bin/bash

source ./scripts/path_info
source ./scripts/util

NODEJS_WIN_x64="win-x64"
NODEJS_WIN_x86="win-x86"
NODEJS_LINUX_x64="linux-x64"
NODEJS_LINUX_x86="linux-x86"
NODEJS_MAC_x64="darwin-x64"
# TODO : This is temporal fixed version. Need to get latest or specific version from dist repository
NODEJS_VERSION="v6.9.5"
NODEJS_VERSION_NAME="node-$NODEJS_VERSION"
NODEJS_DOWNLOAD_URL="https://nodejs.org/dist/$NODEJS_VERSION/"

# Get the nodeJS binary for running platform
# $1 : platform name
function get_nodejs_binary() {
  platform_name=$1
  if [ "$platform_name" = "linux_x86_64" ]; then
    target_node_platform_name="$NODEJS_VERSION_NAME-$NODEJS_LINUX_x64"
    target_node_archive_file="$target_node_platform_name.tar.gz"
  elif [ "$platform_name" = "linux_x86" ]; then
    target_node_platform_name="$NODEJS_VERSION_NAME-$NODEJS_LINUX_x86"
    target_node_archive_file="$target_node_platform_name.tar.gz"
  elif [ "$platform_name" = "windows_x86_64" ]; then
    target_node_platform_name="$NODEJS_VERSION_NAME-$NODEJS_WIN_x64"
    target_node_archive_file="$target_node_platform_name.zip"
  elif [ "$platform_name" = "windows_x86" ]; then
    target_node_platform_name="$NODEJS_VERSION_NAME-$NODEJS_WIN_x86"
    target_node_archive_file="$target_node_platform_name.zip"
  elif [ "$platform_name" = "darwin_x86_64" ]; then
    target_node_platform_name="$NODEJS_VERSION_NAME-$NODEJS_MAC_x64"
    target_node_archive_file="$target_node_platform_name.tar.gz"
  fi

  target_url="$NODEJS_DOWNLOAD_URL/$target_node_archive_file"

  target_node_dir=$(get_node_dir)

  download_file_to_path "$target_url" "$target_node_dir"
  if [ ! "$?" = "0" ]; then
    return
  fi

  extract_archive "$target_node_dir/$target_node_archive_file" \
  "$target_node_dir"; rm -f $target_node_dir/$target_node_archive_file

  # FIXME(Jaecule) : This workaround is for removing dir
  # of archive file need more graceful way
  mv $target_node_dir/$target_node_platform_name/* "$target_node_dir/"
  rmdir "$target_node_dir/$target_node_platform_name"
}
