#!/bin/bash
NODEJS_7x_LATEST_URL="https://nodejs.org/dist/latest-v7.x"
NODEJS_WIN_x64="win-x64"
NODEJS_WIN_x86="win-x86"
NODEJS_LINUX_x64="linux-x64"
NODEJS_LINUX_x86="linux-x86"
NODEJS_LATEST7X_VERSION="node-v7.4.0"   # This is temporary how we can get latest version from the dist repo?

source ./scripts/path_info

# Get the nodeJS binary for running platform
# $1 : platform name
function get_platform_bin() {
  platform_name=$1
  if [ "$platform_name" = "linux_x86_64" ]; then
    node_file_name="$NODEJS_LATEST7X_VERSION-$NODEJS_LINUX_x64"
    node_archive_file="$node_file_name.tar.gz"
  elif [ "$platform_name" = "linux_x86" ]; then
    node_file_name="$NODEJS_LATEST7X_VERSION-$NODEJS_LINUX_x86"
    node_archive_file"$node_file_name.tar.gz"
  elif [ "$platform_name" = "windows_x86_64" ]; then
    node_file_name="$NODEJS_LATEST7X_VERSION-$NODEJS_WIN_x64"
    node_archive_file"$node_file_name.zip"
  elif [ "$platform_name" = "windows_x86" ]; then
    node_file_name="$NODEJS_LATEST7X_VERSION-$NODEJS_WIN_x86"
    node_archive_file"$node_file_name.zip"
  fi

  target_url="$NODEJS_7x_LATEST_URL/$node_archive_file"

  target_node_dir=$(get_node_dir)

  donwload_file_to_path "$target_url" "$target_node_dir"
  if [ ! "$?" = "0" ]; then
    return
  fi

  extract_archive "$target_node_dir/$node_archive_file" "$target_node_dir"
  #mv /home/jclee/gits/absolute/platform/linux_x86_64/node-v7.4.0-linux-x64/* /home/jclee/gits/absolute/platform/linux_x86_64/

  sleep 3

  ls "$target_node_dir/$node_file_name/*"
  # FIXME(Jaecule) : This workaround is for removing dir of archive file need more graceful way
  echo mv "$target_node_dir/$node_file_name/*" "$target_node_dir/"
  mv "$target_node_dir/$node_file_name/*" "$target_node_dir/"

  rmdir "$target_node_dir/$node_file_name"
  rm -f $target_node_dir/$node_archive_file
}

# Get the download file to given path
# $1 : download url
# $2 : file to locate
# Out: 0 if success to donwload file else negative
function donwload_file_to_path() {
  url=$1
  path=$2
  if [ -z "$1" ] || [ -z "$2" ]; then
    echo "Invalid donwload url or path url : $1 path : $2"
    return -1
  fi

  echo "download from $target_url to $target_path"

  if [ ! -d "$target_path" ]; then
    echo "targetPath does not exist. create $target_path"
    mkdir $target_path
  fi

  wget $url -P $path
  if [ "$?" != "0" ]; then
    echo "Failed to download"
    return -2
  fi

  return 0
}

# extract archive files to given path
#
# Arguments:
# $1 : path of archive
# $2 : path of uncompressed files
# Remarks : if $2 is not given, uncompress files to current path
function extract_archive() {
    if [ -z "$2" ]; then
      dest="./"
    else
      dest="$2"
    fi

    if [ -f "$1" ] ; then
      # NAME=${1%.*}
      # mkdir $NAME && cd $NAME
      case $1 in
        *.tar.gz) tar xvzf $1 -C $dest ;;
        *.gz) gunzip $1 > $dest ;;
        *.tar) tar xvf $1 -C $dest ;;
        # FIXME(Jaechul): Current our win-bash doens't support unzip! So this woudn't run on windows
        *.zip) unzip $1 -d $dest ;;
        *.7z) 7z x $1 -o $dest ;;
        *) echo "extract: '$1' - unknown archive method" ;;
      esac
    else
      echo "$1 - file does not exist"
    fi
}
