#!/bin/bash

# This file is providing some utility APIs (e.g. download_file)

source "./scripts/platform_info"

# Check whether the specified command can use in this platform or not.
# NOTE: This function will not be working on Windows.
# Return: 0 if the command can use in this platform.
function can_use_command() {
  type "$1" > /dev/null 2>&1
  return $?
}

function is_windows() {
  platform_name=$(get_platform_name)
  if [ "$platform_name" = "windows_x86" \
      -o "$platform_name" = "windows_x86_64" ]; then
    return 0;
  fi
  return 1;
}

# Download file in remote URL starting with http(s).
# $1: Remote file url which is start with http(s).
# $2: The location where the file will be downloaded.
# Return: 0 if the file is downloaded successfully.
function download_file() {
  if is_windows || can_use_command wget; then
    wget $1 -P $2
    return $?
  fi
  cd $2 && { curl -LO $1 ; cd -; }
  return $?
}

# Get the download file to given path
# $1 : download url
# $2 : file to locate
# Out: 0 if success to download file else negative
function download_file_to_path() {
  url=$1
  path=$2
  if [ -z "$1" ] || [ -z "$2" ]; then
    echo "Invalid download url or path url : $1 path : $2"
    return -1
  fi

  echo "download from $url to $path"

  if [ ! -d "$path" ]; then
    echo "targetPath does not exist. create $path"
    mkdir $path
  fi

  download_file $url $path
  if [ "$?" != "0" ]; then
    echo "Failed to download"
    return -2
  fi

  return 0
}

# extract archive files to given path
#
# Arguments:
# $1 : path of archive
# $2 : path of uncompressed files
# Remarks : if $2 is not given, uncompress files to current path
function extract_archive() {
  if [ -z "$2" ]; then
    dest="./"
  else
    dest="$2"
  fi

  if [ -f "$1" ] ; then
    case $1 in
      *.tgz) tar xvzf $1 -C $dest ;;
      *.tar.gz) tar xvzf $1 -C $dest ;;
      *.gz) gunzip $1 > $dest ;;
      *.tar) tar xvf $1 -C $dest ;;
      *.zip) unzip $1 -d $dest ;;
      *.7z) 7z x $1 -o $dest ;;
      *) echo "extract: '$1' - unknown archive method" ;;
    esac
  else
    echo "$1 - file does not exist"
  fi
}
